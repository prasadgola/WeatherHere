{"ast":null,"code":"var _jsxFileName = \"/Users/basavaprasadgola/Codes/dotnet/weatherapp/weather-app-frontend-react-typescript/src/App.tsx\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.tsx</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport Weather from './Weather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [city, setCity] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleCityChange = event => {\n    setCity(event.target.value);\n  };\n  const fetchWeatherData = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      console.log('hello');\n      const response = await fetch(`http://localhost:5056/?city=${city}`);\n      console.log('hello');\n      if (!response.ok) {\n        throw new Error(`API request failed with status ${response.status}`);\n      }\n      const data = await response.json();\n      setWeatherData(data);\n    } catch (error) {\n      if (error instanceof Error) {\n        setError(error.message);\n      } else {\n        console.error('Unknown error:', error);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (city) {\n      fetchWeatherData();\n    }\n  }, [city]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: city,\n      onChange: handleCityChange,\n      placeholder: \"Enter city name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchWeatherData,\n      children: \"Get Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading weather data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Weather in \", city]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(Weather, {\n      ...weatherData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"n2N6ib3r4YSYRpbLXgzS9c+4tD4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Weather","jsxDEV","_jsxDEV","App","_s","city","setCity","weatherData","setWeatherData","isLoading","setIsLoading","error","setError","handleCityChange","event","target","value","fetchWeatherData","console","log","response","fetch","ok","Error","status","data","json","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/basavaprasadgola/Codes/dotnet/weatherapp/weather-app-frontend-react-typescript/src/App.tsx"],"sourcesContent":["// import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.tsx</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\nimport React, { useState, useEffect } from 'react';\nimport Weather from './Weather';\n\ninterface WeatherProps {\n  city: string;\n  temperature: number;\n  weatherDescription: string;\n}\n\nconst App: React.FC = () => {\n  const [city, setCity] = useState('');\n  const [weatherData, setWeatherData] = useState<WeatherProps | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleCityChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCity(event.target.value);\n  };\n\n  const fetchWeatherData = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      console.log('hello');\n\n      const response = await fetch(`http://localhost:5056/?city=${city}`);\n      console.log('hello');\n      \n\n      if (!response.ok) {\n        throw new Error(`API request failed with status ${response.status}`);\n      }\n\n      const data = await response.json();\n      setWeatherData(data);\n    } catch (error) {\n      if (error instanceof Error) {\n        setError(error.message);\n      } else {\n        console.error('Unknown error:', error);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (city) {\n      fetchWeatherData();\n    }\n  }, [city]);\n\n  return (\n    <div className=\"App\">\n      <h1>Weather App</h1>\n      <input type=\"text\" value={city} onChange={handleCityChange} placeholder=\"Enter city name\" />\n      <button onClick={fetchWeatherData}>Get Weather</button>\n      {isLoading && <p>Loading weather data...</p>}\n      {error && <p className=\"error\">{error}</p>}\n      <h2>Weather in {city}</h2>\n      {weatherData && <Weather {...weatherData} />}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}